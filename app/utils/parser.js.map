{"version":3,"file":"parser.js","sources":["../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/options.js","../node_modules/.pnpm/domelementtype@2.3.0/node_modules/domelementtype/lib/esm/index.js","../node_modules/.pnpm/domhandler@5.0.3/node_modules/domhandler/lib/esm/node.js","../node_modules/.pnpm/domhandler@5.0.3/node_modules/domhandler/lib/esm/index.js","../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js","../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js","../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js","../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.js","../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/escape.js","../node_modules/.pnpm/dom-serializer@2.0.0/node_modules/dom-serializer/lib/esm/foreignNames.js","../node_modules/.pnpm/dom-serializer@2.0.0/node_modules/dom-serializer/lib/esm/index.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/stringify.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/traversal.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/manipulation.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/querying.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/legacy.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/helpers.js","../node_modules/.pnpm/domutils@3.1.0/node_modules/domutils/lib/esm/feeds.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/static.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/utils.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/api/attributes.js","../node_modules/.pnpm/css-what@6.1.0/node_modules/css-what/lib/es/types.js","../node_modules/.pnpm/css-what@6.1.0/node_modules/css-what/lib/es/parse.js","../node_modules/.pnpm/boolbase@1.0.0/node_modules/boolbase/index.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/sort.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/attributes.js","../node_modules/.pnpm/nth-check@2.1.1/node_modules/nth-check/lib/esm/parse.js","../node_modules/.pnpm/nth-check@2.1.1/node_modules/nth-check/lib/esm/compile.js","../node_modules/.pnpm/nth-check@2.1.1/node_modules/nth-check/lib/esm/index.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/pseudo-selectors/filters.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/pseudo-selectors/aliases.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/pseudo-selectors/subselects.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/pseudo-selectors/index.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/general.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/compile.js","../node_modules/.pnpm/css-select@5.1.0/node_modules/css-select/lib/esm/index.js","../node_modules/.pnpm/cheerio-select@2.1.0/node_modules/cheerio-select/lib/esm/positionals.js","../node_modules/.pnpm/cheerio-select@2.1.0/node_modules/cheerio-select/lib/esm/helpers.js","../node_modules/.pnpm/cheerio-select@2.1.0/node_modules/cheerio-select/lib/esm/index.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/api/traversing.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/parse.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/api/manipulation.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/api/css.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/api/forms.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/cheerio.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/load.js","../node_modules/.pnpm/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/Tokenizer.js","../node_modules/.pnpm/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/Parser.js","../node_modules/.pnpm/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/index.js","../node_modules/.pnpm/cheerio@1.0.0-rc.12/node_modules/cheerio/lib/esm/slim.js","../src/utils/parser.ts","../src/config/allowedTags.ts","../src/utils/getRichText.ts"],"sourcesContent":["const defaultOpts = {\n    xml: false,\n    decodeEntities: true,\n};\n/** Cheerio default options. */\nexport default defaultOpts;\nconst xmlModeDefault = {\n    _useHtmlParser2: true,\n    xmlMode: true,\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @returns The flattened options.\n */\nexport function flatten(options) {\n    return (options === null || options === void 0 ? void 0 : options.xml)\n        ? typeof options.xml === 'boolean'\n            ? xmlModeDefault\n            : { ...xmlModeDefault, ...options.xml }\n        : options !== null && options !== void 0 ? options : undefined;\n}\n//# sourceMappingURL=options.js.map","/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n","/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n","import { isTag, isCDATA, isText, hasChildren, isComment, } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n    return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n//# sourceMappingURL=stringify.js.map","import { isTag, hasChildren, } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n//# sourceMappingURL=traversal.js.map","/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n//# sourceMappingURL=manipulation.js.map","import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [nodes];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nexport function findOne(test, nodes, recurse = true) {\n    let elem = null;\n    for (let i = 0; i < nodes.length && !elem; i++) {\n        const node = nodes[i];\n        if (!isTag(node)) {\n            continue;\n        }\n        else if (test(node)) {\n            elem = node;\n        }\n        else if (recurse && node.children.length > 0) {\n            elem = findOne(test, node.children, true);\n        }\n    }\n    return elem;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n    return nodes.some((checked) => isTag(checked) &&\n        (test(checked) || existsOne(test, checked.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n    const result = [];\n    const nodeStack = [nodes];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!isTag(elem))\n            continue;\n        if (test(elem))\n            result.push(elem);\n        if (elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n//# sourceMappingURL=querying.js.map","import { isTag, isText } from \"domhandler\";\nimport { filter, findOne } from \"./querying.js\";\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nexport function testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nexport function getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nexport function getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nexport function getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nexport function getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n//# sourceMappingURL=legacy.js.map","import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n//# sourceMappingURL=helpers.js.map","import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n//# sourceMappingURL=feeds.js.map","import { textContent } from 'domutils';\nimport { default as defaultOptions, flatten as flattenOptions, } from './options.js';\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n    if (!that)\n        return '';\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n    return (!options &&\n        typeof dom === 'object' &&\n        dom != null &&\n        !('length' in dom) &&\n        !('type' in dom));\n}\nexport function html(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */\n    const toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */\n    const opts = {\n        ...defaultOptions,\n        ...this === null || this === void 0 ? void 0 : this._options,\n        ...flattenOptions(options !== null && options !== void 0 ? options : {}),\n    };\n    return render(this, toRender, opts);\n}\n/**\n * Render the document as XML.\n *\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(dom) {\n    const options = { ...this._options, xmlMode: true };\n    return render(this, dom, options);\n}\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `script` and `stype` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(elements) {\n    const elems = elements ? elements : this ? this.root() : [];\n    let ret = '';\n    for (let i = 0; i < elems.length; i++) {\n        ret += textContent(elems[i]);\n    }\n    return ret;\n}\nexport function parseHTML(data, context, keepScripts = typeof context === 'boolean' ? context : false) {\n    if (!data || typeof data !== 'string') {\n        return null;\n    }\n    if (typeof context === 'boolean') {\n        keepScripts = context;\n    }\n    const parsed = this.load(data, defaultOptions, false);\n    if (!keepScripts) {\n        parsed('script').remove();\n    }\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */\n    return parsed.root()[0].children.slice();\n}\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root() {\n    return this(this._root);\n}\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) {\n        return false;\n    }\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */\n    let next = contained;\n    while (next && next !== next.parent) {\n        next = next.parent;\n        if (next === container) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * $.merge().\n *\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge(arr1, arr2) {\n    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n        return;\n    }\n    let newLength = arr1.length;\n    const len = +arr2.length;\n    for (let i = 0; i < len; i++) {\n        arr1[newLength++] = arr2[i];\n    }\n    arr1.length = newLength;\n    return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n    if (Array.isArray(item)) {\n        return true;\n    }\n    if (typeof item !== 'object' ||\n        !Object.prototype.hasOwnProperty.call(item, 'length') ||\n        typeof item.length !== 'number' ||\n        item.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < item.length; i++) {\n        if (!(i in item)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=static.js.map","import { cloneNode, Document } from 'domhandler';\n/**\n * Check if the DOM element is a tag.\n *\n * `isTag(type)` includes `<script>` and `<style>` tags.\n *\n * @private\n * @category Utils\n * @param type - The DOM node to check.\n * @returns Whether the node is a tag.\n */\nexport { isTag } from 'domhandler';\n/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n    return str.replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n    return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n    const len = array.length;\n    for (let i = 0; i < len; i++)\n        fn(array[i], i);\n    return array;\n}\n/**\n * Create a deep copy of the given DOM structure. Sets the parents of the copies\n * of the passed nodes to `null`.\n *\n * @private\n * @category Utils\n * @param dom - The domhandler-compliant DOM structure.\n * @returns - The cloned DOM.\n */\nexport function cloneDom(dom) {\n    const clone = 'length' in dom\n        ? Array.prototype.map.call(dom, (el) => cloneNode(el, true))\n        : [cloneNode(dom, true)];\n    // Add a root node around the cloned nodes\n    const root = new Document(clone);\n    clone.forEach((node) => {\n        node.parent = root;\n    });\n    return clone;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n    const tagStart = str.indexOf('<');\n    if (tagStart < 0 || tagStart > str.length - 3)\n        return false;\n    const tagChar = str.charCodeAt(tagStart + 1);\n    return (((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n        (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n        tagChar === CharacterCodes.Exclamation) &&\n        str.includes('>', tagStart + 2));\n}\n//# sourceMappingURL=utils.js.map","/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nimport { text } from '../static.js';\nimport { isTag, domEach, camelCase, cssCase } from '../utils.js';\nimport { innerText, textContent } from 'domutils';\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n/*\n * Lookup table for coercing string data-* attributes to their corresponding\n * JavaScript primitives\n */\nconst primitives = {\n    null: null,\n    true: true,\n    false: false,\n};\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !isTag(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn.call(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return text(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = `${value}`;\n    }\n}\nexport function attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach((objName) => {\n                    const objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                });\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name) ? (value ? '' : null) : `${value}`);\n    }\n}\nexport function prop(name, value) {\n    var _a;\n    if (typeof name === 'string' && value === undefined) {\n        const el = this[0];\n        if (!el || !isTag(el))\n            return undefined;\n        switch (name) {\n            case 'style': {\n                const property = this.css();\n                const keys = Object.keys(property);\n                keys.forEach((p, i) => {\n                    property[i] = p;\n                });\n                property.length = keys.length;\n                return property;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                return el.name.toUpperCase();\n            }\n            case 'href':\n            case 'src': {\n                const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                /* eslint-disable node/no-unsupported-features/node-builtins */\n                if (typeof URL !== 'undefined' &&\n                    ((name === 'href' && (el.tagName === 'a' || el.name === 'link')) ||\n                        (name === 'src' &&\n                            (el.tagName === 'img' ||\n                                el.tagName === 'iframe' ||\n                                el.tagName === 'audio' ||\n                                el.tagName === 'video' ||\n                                el.tagName === 'source'))) &&\n                    prop !== undefined &&\n                    this.options.baseURI) {\n                    return new URL(prop, this.options.baseURI).href;\n                }\n                /* eslint-enable node/no-unsupported-features/node-builtins */\n                return prop;\n            }\n            case 'innerText': {\n                return innerText(el);\n            }\n            case 'textContent': {\n                return textContent(el);\n            }\n            case 'outerHTML':\n                return this.clone().wrap('<container />').parent().html();\n            case 'innerHTML':\n                return this.html();\n            default:\n                return getProp(el, name, this.options.xmlMode);\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new Error('Bad combination of arguments.');\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el)) {\n                    setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n                }\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach((key) => {\n                    const val = name[key];\n                    setProp(el, key, val, this.options.xmlMode);\n                });\n            }\n            else {\n                setProp(el, name, value, this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param el - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(el, name, value) {\n    var _a;\n    const elem = el;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store. If no\n * attribute name is specified, read _all_ HTML5 `data-*` attributes in this manner.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or a map with all of the data attributes.\n */\nfunction readData(el, name) {\n    let domNames;\n    let jsNames;\n    let value;\n    if (name == null) {\n        domNames = Object.keys(el.attribs).filter((attrName) => attrName.startsWith(dataAttrPrefix));\n        jsNames = domNames.map((domName) => camelCase(domName.slice(dataAttrPrefix.length)));\n    }\n    else {\n        domNames = [dataAttrPrefix + cssCase(name)];\n        jsNames = [name];\n    }\n    for (let idx = 0; idx < domNames.length; ++idx) {\n        const domName = domNames[idx];\n        const jsName = jsNames[idx];\n        if (hasOwn.call(el.attribs, domName) &&\n            !hasOwn.call(el.data, jsName)) {\n            value = el.attribs[domName];\n            if (hasOwn.call(primitives, value)) {\n                value = primitives[value];\n            }\n            else if (value === String(Number(value))) {\n                value = Number(value);\n            }\n            else if (rbrace.test(value)) {\n                try {\n                    value = JSON.parse(value);\n                }\n                catch (e) {\n                    /* Ignore */\n                }\n            }\n            el.data[jsName] = value;\n        }\n    }\n    return name == null ? el.data : value;\n}\nexport function data(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !isTag(elem))\n        return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (!name) {\n        return readData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        domEach(this, (el) => {\n            if (isTag(el)) {\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    if (hasOwn.call(dataEl.data, name)) {\n        return dataEl.data[name];\n    }\n    return readData(dataEl, name);\n}\nexport function val(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !isTag(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea':\n            return this.text(value);\n        case 'select': {\n            const option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                const values = typeof value !== 'object' ? [value] : value;\n                for (let i = 0; i < values.length; i++) {\n                    this.find(`option[value=\"${values[i]}\"]`).attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map((el) => text(el.children))\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option':\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr(name) {\n    const attrNames = splitNames(name);\n    for (let i = 0; i < attrNames.length; i++) {\n        domEach(this, (elem) => {\n            if (isTag(elem))\n                removeAttribute(elem, attrNames[i]);\n        });\n    }\n    return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass(className) {\n    return this.toArray().some((elem) => {\n        const clazz = isTag(elem) && elem.attribs['class'];\n        let idx = -1;\n        if (clazz && className.length) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                const end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                const className = el.attribs['class'] || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = getAttr(el, 'class', false);\n        if (!className) {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n        else {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for (let j = 0; j < classNames.length; j++) {\n                const appendClass = `${classNames[j]} `;\n                if (!setClass.includes(` ${appendClass}`))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n    }\n    return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n            }\n        });\n    }\n    const classes = splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return domEach(this, (el) => {\n        if (!isTag(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs['class'] = '';\n        }\n        else {\n            const elClasses = splitNames(el.attribs['class']);\n            let changed = false;\n            for (let j = 0; j < numClasses; j++) {\n                const index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs['class'] = elClasses.join(' ');\n            }\n        }\n    });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        const elementClasses = splitNames(el.attribs['class']);\n        // Check if class already exists\n        for (let j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index >= 0) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs['class'] = elementClasses.join(' ');\n    }\n    return this;\n}\n//# sourceMappingURL=attributes.js.map","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n","import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","import { AttributeAction, SelectorType } from \"css-what\";\nconst procedure = new Map([\n    [SelectorType.Universal, 50],\n    [SelectorType.Tag, 30],\n    [SelectorType.Attribute, 1],\n    [SelectorType.Pseudo, 0],\n]);\nexport function isTraversal(token) {\n    return !procedure.has(token.type);\n}\nconst attributes = new Map([\n    [AttributeAction.Exists, 10],\n    [AttributeAction.Equals, 8],\n    [AttributeAction.Not, 7],\n    [AttributeAction.Start, 6],\n    [AttributeAction.End, 6],\n    [AttributeAction.Any, 5],\n]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nexport default function sortByProcedure(arr) {\n    const procs = arr.map(getProcedure);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === SelectorType.Attribute) {\n        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === AttributeAction.Equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d) => Math.min(...d.map(getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) {\n                proc = 0;\n            }\n        }\n        else {\n            proc = 2;\n        }\n    }\n    return proc;\n}\n//# sourceMappingURL=sort.js.map","import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexport const attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbase.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) &&\n                next(elem);\n        };\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                var _a;\n                return ((_a = adapter\n                    .getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) &&\n                next(elem);\n        };\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) &&\n                next(elem);\n        };\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n//# sourceMappingURL=attributes.js.map","// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nexport function parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n//# sourceMappingURL=parse.js.map","import boolbase from \"boolbase\";\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nexport function compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n/**\n * Returns a function that produces a monotonously increasing sequence of indices.\n *\n * If the sequence has an end, the returned function will return `null` after\n * the last index in the sequence.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing (2n+3)</caption>\n *\n * ```js\n * const gen = nthCheck.generate([2, 3])\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value (-2n+10)</caption>\n *\n * ```js\n *\n * const gen = nthCheck.generate([-2, 5]);\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function generate(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    let b = parsed[1] - 1;\n    let n = 0;\n    // Make sure to always return an increasing sequence\n    if (a < 0) {\n        const aPos = -a;\n        // Get `b mod a`\n        const minValue = ((b % aPos) + aPos) % aPos;\n        return () => {\n            const val = minValue + aPos * n++;\n            return val > b ? null : val;\n        };\n    }\n    if (a === 0)\n        return b < 0\n            ? // There are no result — always return `null`\n                () => null\n            : // Return `b` exactly once\n                () => (n++ === 0 ? b : null);\n    if (b < 0) {\n        b += a * Math.ceil(-b / a);\n    }\n    return () => a * n++ + b;\n}\n//# sourceMappingURL=compile.js.map","import { parse } from \"./parse.js\";\nimport { compile, generate } from \"./compile.js\";\nexport { parse, compile, generate };\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nexport default function nthCheck(formula) {\n    return compile(parse(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function sequence(formula) {\n    return generate(parse(formula));\n}\n//# sourceMappingURL=index.js.map","import getNCheck from \"nth-check\";\nimport boolbase from \"boolbase\";\nfunction getChildFunc(next, adapter) {\n    return (elem) => {\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nexport const filters = {\n    contains(next, text, { adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains(next, text, { adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return (next(elem) &&\n                adapter.getText(elem).toLowerCase().includes(itext));\n        };\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => {\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n//# sourceMappingURL=filters.js.map","// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n    empty(elem, { adapter }) {\n        return !adapter.getChildren(elem).some((elem) => \n        // FIXME: `getText` call is potentially expensive.\n        adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i]))\n                return true;\n            if (adapter.isTag(siblings[i]))\n                break;\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n//# sourceMappingURL=pseudos.js.map","/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map","import boolbase from \"boolbase\";\nimport { isTraversal } from \"../sort.js\";\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexport const PLACEHOLDER_ELEMENT = {};\nexport function ensureIsTag(next, adapter) {\n    if (next === boolbase.falseFunc)\n        return boolbase.falseFunc;\n    return (elem) => adapter.isTag(elem) && next(elem);\n}\nexport function getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1)\n        return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\n        return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.trueFunc\n        ? next\n        : func === boolbase.falseFunc\n            ? boolbase.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexport const subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbase.falseFunc\n            ? next\n            : func === boolbase.trueFunc\n                ? boolbase.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        const hasElement = ensureIsTag(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbase.trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */\n            const { shouldTestNextSiblings = false } = compiled;\n            return (elem) => {\n                if (!next(elem))\n                    return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings\n                    ? [...childs, ...getNextSiblings(elem, adapter)]\n                    : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem) => next(elem) &&\n            adapter.existsOne(hasElement, adapter.getChildren(elem));\n    },\n};\n//# sourceMappingURL=subselects.js.map","import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n    var _a;\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n//# sourceMappingURL=index.js.map","import { attributeRules } from \"./attributes.js\";\nimport { compilePseudoSelector } from \"./pseudo-selectors/index.js\";\nimport { SelectorType } from \"css-what\";\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n        return parent;\n    }\n    return null;\n}\n/*\n * All available rules\n */\nexport function compileGeneralSelector(next, selector, options, context, compileToken) {\n    const { adapter, equals } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (options.cacheResults === false ||\n                typeof WeakSet === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            // @ts-expect-error `ElementNode` is not extending object\n            const isFalseCache = new WeakSet();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                while ((current = getElementParent(current, adapter))) {\n                    if (!isFalseCache.has(current)) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                        isFalseCache.add(current);\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current))\n                        return true;\n                } while ((current = getElementParent(current, adapter)));\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n//# sourceMappingURL=general.js.map","import { parse, SelectorType } from \"css-what\";\nimport boolbase from \"boolbase\";\nimport sortRules, { isTraversal } from \"./sort.js\";\nimport { compileGeneralSelector } from \"./general.js\";\nimport { ensureIsTag, PLACEHOLDER_ELEMENT, } from \"./pseudo-selectors/subselects.js\";\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nexport function compile(selector, options, context) {\n    const next = compileUnsafe(selector, options, context);\n    return ensureIsTag(next, options.adapter);\n}\nexport function compileUnsafe(selector, options, context) {\n    const token = typeof selector === \"string\" ? parse(selector) : selector;\n    return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e) => {\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === PLACEHOLDER_ELEMENT || (parent && adapter.isTag(parent));\n    }));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) {\n            // Don't continue in else branch\n        }\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nexport function compileToken(token, options, context) {\n    var _a;\n    token.forEach(sortRules);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    const query = token\n        .map((rules) => {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo ||\n                first.name !== \"scope\") {\n                // Ignore\n            }\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    })\n        .reduce(reduceRules, boolbase.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule) => previous === boolbase.falseFunc\n        ? boolbase.falseFunc\n        : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n        return a;\n    }\n    if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n//# sourceMappingURL=compile.js.map","import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken, } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : (opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals);\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nexport function prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? []\n    : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? null\n    : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nexport function is(elem, query, options) {\n    const opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexport default selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";\n//# sourceMappingURL=index.js.map","export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map","import { isFilter } from \"./positionals.js\";\nexport function getDocumentRoot(node) {\n    while (node.parent)\n        node = node.parent;\n    return node;\n}\nexport function groupSelectors(selectors) {\n    const filteredSelectors = [];\n    const plainSelectors = [];\n    for (const selector of selectors) {\n        if (selector.some(isFilter)) {\n            filteredSelectors.push(selector);\n        }\n        else {\n            plainSelectors.push(selector);\n        }\n    }\n    return [plainSelectors, filteredSelectors];\n}\n//# sourceMappingURL=helpers.js.map","import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext, } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit, } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n    type: SelectorType.Universal,\n    namespace: null,\n};\nconst SCOPE_PSEUDO = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\nexport function is(element, selector, options = {}) {\n    return some([element], selector, options);\n}\nexport function some(elements, selector, options = {}) {\n    if (typeof selector === \"function\")\n        return elements.some(selector);\n    const [plain, filtered] = groupSelectors(parse(selector));\n    return ((plain.length > 0 && elements.some(compileToken(plain, options))) ||\n        filtered.some((sel) => filterBySelector(sel, elements, options).length > 0));\n}\nfunction filterByPosition(filter, elems, data, options) {\n    const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length\n                ? [num < 0 ? elems[elems.length + num] : elems[num]]\n                : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter((_, i) => i % 2 === 0);\n        case \"odd\":\n            return elems.filter((_, i) => i % 2 === 1);\n        case \"not\": {\n            const filtered = new Set(filterParsed(data, elems, options));\n            return elems.filter((e) => !filtered.has(e));\n        }\n    }\n}\nexport function filter(selector, elements, options = {}) {\n    return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n    if (elements.length === 0)\n        return [];\n    const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n    let found;\n    if (plainSelectors.length) {\n        const filtered = filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) {\n            return filtered;\n        }\n        // Otherwise, we have to do some filtering\n        if (filtered.length) {\n            found = new Set(filtered);\n        }\n    }\n    for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n        const filteredSelector = filteredSelectors[i];\n        const missing = found\n            ? elements.filter((e) => DomUtils.isTag(e) && !found.has(e))\n            : elements;\n        if (missing.length === 0)\n            break;\n        const filtered = filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */\n                if (i === filteredSelectors.length - 1) {\n                    return filtered;\n                }\n                found = new Set(filtered);\n            }\n            else {\n                filtered.forEach((el) => found.add(el));\n            }\n        }\n    }\n    return typeof found !== \"undefined\"\n        ? (found.size === elements.length\n            ? elements\n            : // Filter elements to preserve order\n                elements.filter((el) => found.has(el)))\n        : [];\n}\nfunction filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some(isTraversal)) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */\n        const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n        const opts = { ...options, context: elements, relativeSelector: false };\n        selector.push(SCOPE_PSEUDO);\n        return findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root, options = {}, limit = Infinity) {\n    if (typeof selector === \"function\") {\n        return find(root, selector);\n    }\n    const [plain, filtered] = groupSelectors(parse(selector));\n    const results = filtered.map((sel) => findFilterElements(root, sel, options, true, limit));\n    // Plain selectors can be queried in a single go\n    if (plain.length) {\n        results.push(findElements(root, plain, options, limit));\n    }\n    if (results.length === 0) {\n        return [];\n    }\n    // If there was only a single selector, just return the result\n    if (results.length === 1) {\n        return results[0];\n    }\n    // Sort results, filtering for duplicates\n    return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    const filterIndex = selector.findIndex(isFilter);\n    const sub = selector.slice(0, filterIndex);\n    const filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */\n    const limit = getLimit(filter.name, filter.data, partLimit);\n    if (limit === 0)\n        return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */\n    const elemsNoLimit = sub.length === 0 && !Array.isArray(root)\n        ? DomUtils.getChildren(root).filter(DomUtils.isTag)\n        : sub.length === 0\n            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)\n            : queryForSelector || sub.some(isTraversal)\n                ? findElements(root, [sub], options, limit)\n                : filterElements(root, [sub], options);\n    const elems = elemsNoLimit.slice(0, limit);\n    let result = filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) {\n        return result;\n    }\n    const remainingSelector = selector.slice(filterIndex + 1);\n    const remainingHasTraversal = remainingSelector.some(isTraversal);\n    if (remainingHasTraversal) {\n        if (isTraversal(remainingSelector[0])) {\n            const { type } = remainingSelector[0];\n            if (type === SelectorType.Sibling ||\n                type === SelectorType.Adjacent) {\n                // If we have a sibling traversal, we need to also look at the siblings.\n                result = prepareContext(result, DomUtils, true);\n            }\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift(UNIVERSAL_SELECTOR);\n        }\n        options = {\n            ...options,\n            // Avoid absolutizing the selector\n            relativeSelector: false,\n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */\n            rootFunc: (el) => result.includes(el),\n        };\n    }\n    else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n        options = { ...options, rootFunc: boolbase.trueFunc };\n    }\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */\n    return remainingSelector.some(isFilter)\n        ? findFilterElements(result, remainingSelector, options, false, totalLimit)\n        : remainingHasTraversal\n            ? // Query existing elements to resolve traversal.\n                findElements(result, [remainingSelector], options, totalLimit)\n            : // If we don't have any more traversals, simply filter elements.\n                filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n    const query = compileToken(sel, options, root);\n    return find(root, query, limit);\n}\nfunction find(root, query, limit = Infinity) {\n    const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n    return DomUtils.find((node) => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n    const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n    if (els.length === 0)\n        return els;\n    const query = compileToken(sel, options);\n    return query === boolbase.trueFunc ? els : els.filter(query);\n}\n//# sourceMappingURL=index.js.map","/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    var _a;\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    const context = this.toArray();\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    const elems = reSiblingSelector.test(selectorOrHaystack)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        ret.push(value);\n    }\n    return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map","import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument, } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(parser) {\n    /**\n     * Parse a HTML string or a node.\n     *\n     * @param content - The HTML string or node.\n     * @param options - The parser options.\n     * @param isDocument - If `content` is a document.\n     * @param context - The context node in the DOM tree.\n     * @returns The parsed document node.\n     */\n    return function parse(content, options, isDocument, context) {\n        if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n            content = content.toString();\n        }\n        if (typeof content === 'string') {\n            return parser(content, options, isDocument, context);\n        }\n        const doc = content;\n        if (!Array.isArray(doc) && checkIsDocument(doc)) {\n            // If `doc` is already a root, just return it\n            return doc;\n        }\n        // Add conent to new root element\n        const root = new Document([]);\n        // Update the DOM using the root\n        update(doc, root);\n        return root;\n    };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(newChilds, parent) {\n    // Normalize\n    const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n    // Update parent\n    if (parent) {\n        parent.children = arr;\n    }\n    else {\n        parent = null;\n    }\n    // Update neighbors\n    for (let i = 0; i < arr.length; i++) {\n        const node = arr[i];\n        // Cleanly remove existing nodes from their previous structures.\n        if (node.parent && node.parent.children !== arr) {\n            removeElement(node);\n        }\n        if (parent) {\n            node.prev = arr[i - 1] || null;\n            node.next = arr[i + 1] || null;\n        }\n        else {\n            node.prev = node.next = null;\n        }\n        node.parent = parent;\n    }\n    return parent;\n}\n//# sourceMappingURL=parse.js.map","/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { Text, hasChildren } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, cloneDom, isTag, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n    if (elem == null) {\n        return [];\n    }\n    if (isCheerio(elem)) {\n        return clone ? cloneDom(elem.get()) : elem.get();\n    }\n    if (Array.isArray(elem)) {\n        return elem.reduce((newElems, el) => newElems.concat(this._makeDomArray(el, clone)), []);\n    }\n    if (typeof elem === 'string') {\n        return this._parse(elem, this.options, false, null).children;\n    }\n    return clone ? cloneDom([elem]) : [elem];\n}\nfunction _insert(concatenator) {\n    return function (...elems) {\n        const lastIdx = this.length - 1;\n        return domEach(this, (el, i) => {\n            if (!hasChildren(el))\n                return;\n            const domSrc = typeof elems[0] === 'function'\n                ? elems[0].call(el, i, this._render(el.children))\n                : elems;\n            const dom = this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    const spliceArgs = [\n        spliceIdx,\n        spliceCount,\n        ...newElems,\n    ];\n    const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    const next = spliceIdx + spliceCount >= array.length\n        ? null\n        : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */\n    for (let idx = 0; idx < newElems.length; ++idx) {\n        const node = newElems[idx];\n        const oldParent = node.parent;\n        if (oldParent) {\n            const oldSiblings = oldParent.children;\n            const prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx > -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) {\n                    spliceArgs[0]--;\n                }\n            }\n        }\n        node.parent = parent;\n        if (node.prev) {\n            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        }\n        if (node.next) {\n            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        }\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) {\n        prev.next = newElems[0];\n    }\n    if (next) {\n        next.prev = newElems[newElems.length - 1];\n    }\n    return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n    const appendTarget = isCheerio(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n    const prependTarget = isCheerio(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n    uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n    uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n    return function (wrapper) {\n        const lastIdx = this.length - 1;\n        const lastParent = this.parents().last();\n        for (let i = 0; i < this.length; i++) {\n            const el = this[i];\n            const wrap = typeof wrapper === 'function'\n                ? wrapper.call(el, i, el)\n                : typeof wrapper === 'string' && !isHtml(wrapper)\n                    ? lastParent.find(wrapper).clone()\n                    : wrapper;\n            const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n            if (!wrapperDom || !hasChildren(wrapperDom))\n                continue;\n            let elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */\n            let j = 0;\n            while (j < elInsertLocation.children.length) {\n                const child = elInsertLocation.children[j];\n                if (isTag(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                }\n                else {\n                    j++;\n                }\n            }\n            insert(el, elInsertLocation, [wrapperDom]);\n        }\n        return this;\n    };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n    const { parent } = el;\n    if (!parent)\n        return;\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    updateDOM([el], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n    if (!hasChildren(el))\n        return;\n    updateDOM(el.children, elInsertLocation);\n    updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n    this.parent(selector)\n        .not('body')\n        .each((_, el) => {\n        this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n    const el = this[0];\n    if (el) {\n        const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        let elInsertLocation;\n        for (let i = 0; i < wrap.length; i++) {\n            if (wrap[i].type === 'tag')\n                elInsertLocation = wrap[i];\n        }\n        let j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */\n        while (elInsertLocation && j < elInsertLocation.children.length) {\n            const child = elInsertLocation.children[j];\n            if (child.type === 'tag') {\n                elInsertLocation = child;\n                j = 0;\n            }\n            else {\n                j++;\n            }\n        }\n        if (elInsertLocation)\n            this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!hasChildren(el) || !parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        uniqueSplice(siblings, index + 1, 0, dom, parent);\n    });\n}\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n    if (typeof target === 'string') {\n        target = this._make(target);\n    }\n    this.remove();\n    const clones = [];\n    this._makeDomArray(target).forEach((el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!hasChildren(el) || !parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        uniqueSplice(siblings, index, 0, dom, parent);\n    });\n}\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n    const targetArr = this._make(target);\n    this.remove();\n    const clones = [];\n    domEach(targetArr, (el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n    // Filter if we have selector\n    const elems = selector ? this.filter(selector) : this;\n    domEach(elems, (el) => {\n        removeElement(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n        const dom = this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */\n        updateDOM(dom, null);\n        const index = siblings.indexOf(el);\n        // Completely remove old element\n        uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) {\n            el.parent = el.prev = el.next = null;\n        }\n    });\n}\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        el.children.length = 0;\n    });\n}\nexport function html(str) {\n    if (str === undefined) {\n        const el = this[0];\n        if (!el || !hasChildren(el))\n            return null;\n        return this._render(el.children);\n    }\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        const content = isCheerio(str)\n            ? str.toArray()\n            : this._parse(`${str}`, this.options, false, el).children;\n        updateDOM(content, el);\n    });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n    return this._render(this);\n}\nexport function text(str) {\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) {\n        return staticText(this);\n    }\n    if (typeof str === 'function') {\n        // Function support\n        return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n    }\n    // Append text node to each selected elements\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        const textNode = new Text(`${str}`);\n        updateDOM(textNode, el);\n    });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n    return this._make(cloneDom(this.get()));\n}\n//# sourceMappingURL=manipulation.js.map","import { domEach, isTag } from '../utils.js';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, i);\n            }\n        });\n    }\n    if (this.length === 0) {\n        return undefined;\n    }\n    return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        const styles = getCss(el);\n        const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs['style'] = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        Object.keys(prop).forEach((k, i) => {\n            setCss(el, k, prop[k], i);\n        });\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !isTag(el))\n        return;\n    const styles = parse(el.attribs['style']);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        prop.forEach((item) => {\n            if (styles[item] != null) {\n                newStyles[item] = styles[item];\n            }\n        });\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(';')) {\n        const n = str.indexOf(':');\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) {\n                obj[key] += `;${trimmed}`;\n            }\n        }\n        else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=css.js.map","import { isTag } from '../utils.js';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n    // Convert form elements into name/value objects\n    const arr = this.serializeArray();\n    // Serialize each element into a key/value string\n    const retArr = arr.map((data) => `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n    // Return the resulting serialization\n    return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n    // Resolve all form elements from either forms or collections of form elements\n    return this.map((_, elem) => {\n        const $elem = this._make(elem);\n        if (isTag(elem) && elem.name === 'form') {\n            return $elem.find(submittableSelector).toArray();\n        }\n        return $elem.filter(submittableSelector).toArray();\n    })\n        .filter(\n    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled' +\n        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        ':not(:submit, :button, :image, :reset, :file)' +\n        // And are either checked/don't have a checkable state\n        ':matches([checked], :not(:checkbox, :radio))'\n    // Convert each of the elements to its value(s)\n    )\n        .map((_, elem) => {\n        var _a;\n        const $elem = this._make(elem);\n        const name = $elem.attr('name'); // We have filtered for elements with a name before.\n        // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n        const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(value)) {\n            return value.map((val) => \n            /*\n             * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n             * These can occur inside of `<textarea>'s`\n             */\n            ({ name, value: val.replace(rCRLF, '\\r\\n') }));\n        }\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        return { name, value: value.replace(rCRLF, '\\r\\n') };\n    })\n        .toArray();\n}\n//# sourceMappingURL=forms.js.map","import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nexport class Cheerio {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    constructor(elements, root, options) {\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for (let idx = 0; idx < elements.length; idx++) {\n                this[idx] = elements[idx];\n            }\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\n//# sourceMappingURL=cheerio.js.map","import { default as defaultOptions, flatten as flattenOptions, } from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nexport function getLoad(parse, render) {\n    /**\n     * Create a querying function, bound to a document created from the provided markup.\n     *\n     * Note that similar to web browser contexts, this operation may introduce\n     * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n     * switch to fragment mode and disable this.\n     *\n     * @param content - Markup to be loaded.\n     * @param options - Options for the created instance.\n     * @param isDocument - Allows parser to be switched to fragment mode.\n     * @returns The loaded document.\n     * @see {@link https://cheerio.js.org#loading} for additional usage information.\n     */\n    return function load(content, options, isDocument = true) {\n        if (content == null) {\n            throw new Error('cheerio.load() expects a string');\n        }\n        const internalOpts = { ...defaultOptions, ...flattenOptions(options) };\n        const initialRoot = parse(content, internalOpts, isDocument, null);\n        /** Create an extended class here, so that extensions only live on one instance. */\n        class LoadedCheerio extends Cheerio {\n            _make(selector, context) {\n                const cheerio = initialize(selector, context);\n                cheerio.prevObject = this;\n                return cheerio;\n            }\n            _parse(content, options, isDocument, context) {\n                return parse(content, options, isDocument, context);\n            }\n            _render(dom) {\n                return render(dom, this.options);\n            }\n        }\n        function initialize(selector, context, root = initialRoot, opts) {\n            // $($)\n            if (selector && isCheerio(selector))\n                return selector;\n            const options = {\n                ...internalOpts,\n                ...flattenOptions(opts),\n            };\n            const r = typeof root === 'string'\n                ? [parse(root, options, false, null)]\n                : 'length' in root\n                    ? root\n                    : [root];\n            const rootInstance = isCheerio(r)\n                ? r\n                : new LoadedCheerio(r, null, options);\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\n            rootInstance._root = rootInstance;\n            // $(), $(null), $(undefined), $(false)\n            if (!selector) {\n                return new LoadedCheerio(undefined, rootInstance, options);\n            }\n            const elements = typeof selector === 'string' && isHtml(selector)\n                ? // $(<html>)\n                    parse(selector, options, false, null).children\n                : isNode(selector)\n                    ? // $(dom)\n                        [selector]\n                    : Array.isArray(selector)\n                        ? // $([dom])\n                            selector\n                        : undefined;\n            const instance = new LoadedCheerio(elements, rootInstance, options);\n            if (elements) {\n                return instance;\n            }\n            if (typeof selector !== 'string') {\n                throw new Error('Unexpected type of selector');\n            }\n            // We know that our selector is a string now.\n            let search = selector;\n            const searchContext = !context\n                ? // If we don't have a context, maybe we have a root, from loading\n                    rootInstance\n                : typeof context === 'string'\n                    ? isHtml(context)\n                        ? // $('li', '<ul>...</ul>')\n                            new LoadedCheerio([parse(context, options, false, null)], rootInstance, options)\n                        : // $('li', 'ul')\n                            ((search = `${context} ${search}`), rootInstance)\n                    : isCheerio(context)\n                        ? // $('li', $)\n                            context\n                        : // $('li', node), $('li', [nodes])\n                            new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options);\n            // If we still don't have a context, return\n            if (!searchContext)\n                return instance;\n            /*\n             * #id, .class, tag\n             */\n            return searchContext.find(search);\n        }\n        // Add in static methods & properties\n        Object.assign(initialize, staticMethods, {\n            load,\n            // `_root` and `_options` are used in static methods.\n            _root: initialRoot,\n            _options: internalOpts,\n            // Add `fn` for plugins\n            fn: LoadedCheerio.prototype,\n            // Add the prototype here to maintain `instanceof` behavior.\n            prototype: LoadedCheerio.prototype,\n        });\n        return initialize;\n    };\n}\nfunction isNode(obj) {\n    return (!!obj.name ||\n        obj.type === 'root' ||\n        obj.type === 'text' ||\n        obj.type === 'comment');\n}\n//# sourceMappingURL=load.js.map","import { htmlDecodeTree, xmlDecodeTree, BinTrieFlags, determineBranch, replaceCodePoint, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n    State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n    State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n    State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n    State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isNumber(c) {\n    return c >= CharCodes.Zero && c <= CharCodes.Nine;\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nfunction isHexDigit(c) {\n    return ((c >= CharCodes.UpperA && c <= CharCodes.UpperF) ||\n        (c >= CharCodes.LowerA && c <= CharCodes.LowerF));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.trieIndex = 0;\n        this.trieCurrent = 0;\n        /** For named entities, the index of the value. For numeric entities, the code point. */\n        this.entityResult = 0;\n        this.entityExcess = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityTrie = xmlMode ? xmlDecodeTree : htmlDecodeTree;\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    /**\n     * The current index within all of the written data.\n     */\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * The start of the current section.\n     */\n    getSectionStart() {\n        return this.sectionStart;\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.state = State.BeforeEntity;\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n                this.startSpecial(Sequences.TitleEnd, 3);\n            }\n            else {\n                this.state =\n                    !this.xmlMode && lower === Sequences.ScriptEnd[2]\n                        ? State.BeforeSpecialS\n                        : State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.baseState = this.state;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeEntity(c) {\n        // Start excess with 1 to include the '&'\n        this.entityExcess = 1;\n        this.entityResult = 0;\n        if (c === CharCodes.Number) {\n            this.state = State.BeforeNumericEntity;\n        }\n        else if (c === CharCodes.Amp) {\n            // We have two `&` characters in a row. Stay in the current state.\n        }\n        else {\n            this.trieIndex = 0;\n            this.trieCurrent = this.entityTrie[0];\n            this.state = State.InNamedEntity;\n            this.stateInNamedEntity(c);\n        }\n    }\n    stateInNamedEntity(c) {\n        this.entityExcess += 1;\n        this.trieIndex = determineBranch(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n        if (this.trieIndex < 0) {\n            this.emitNamedEntity();\n            this.index--;\n            return;\n        }\n        this.trieCurrent = this.entityTrie[this.trieIndex];\n        const masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;\n        // If the branch is a value, store it and continue\n        if (masked) {\n            // The mask is the number of bytes of the value, including the current byte.\n            const valueLength = (masked >> 14) - 1;\n            // If we have a legacy entity while parsing strictly, just skip the number of bytes\n            if (!this.allowLegacyEntity() && c !== CharCodes.Semi) {\n                this.trieIndex += valueLength;\n            }\n            else {\n                // Add 1 as we have already incremented the excess\n                const entityStart = this.index - this.entityExcess + 1;\n                if (entityStart > this.sectionStart) {\n                    this.emitPartial(this.sectionStart, entityStart);\n                }\n                // If this is a surrogate pair, consume the next two bytes\n                this.entityResult = this.trieIndex;\n                this.trieIndex += valueLength;\n                this.entityExcess = 0;\n                this.sectionStart = this.index + 1;\n                if (valueLength === 0) {\n                    this.emitNamedEntity();\n                }\n            }\n        }\n    }\n    emitNamedEntity() {\n        this.state = this.baseState;\n        if (this.entityResult === 0) {\n            return;\n        }\n        const valueLength = (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >>\n            14;\n        switch (valueLength) {\n            case 1: {\n                this.emitCodePoint(this.entityTrie[this.entityResult] &\n                    ~BinTrieFlags.VALUE_LENGTH);\n                break;\n            }\n            case 2: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                break;\n            }\n            case 3: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n            }\n        }\n    }\n    stateBeforeNumericEntity(c) {\n        if ((c | 0x20) === CharCodes.LowerX) {\n            this.entityExcess++;\n            this.state = State.InHexEntity;\n        }\n        else {\n            this.state = State.InNumericEntity;\n            this.stateInNumericEntity(c);\n        }\n    }\n    emitNumericEntity(strict) {\n        const entityStart = this.index - this.entityExcess - 1;\n        const numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);\n        if (numberStart !== this.index) {\n            // Emit leading data if any\n            if (entityStart > this.sectionStart) {\n                this.emitPartial(this.sectionStart, entityStart);\n            }\n            this.sectionStart = this.index + Number(strict);\n            this.emitCodePoint(replaceCodePoint(this.entityResult));\n        }\n        this.state = this.baseState;\n    }\n    stateInNumericEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 10 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    stateInHexEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 16 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else if (isHexDigit(c)) {\n            this.entityResult =\n                this.entityResult * 16 + ((c | 0x20) - CharCodes.LowerA + 10);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    allowLegacyEntity() {\n        return (!this.xmlMode &&\n            (this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag));\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InNamedEntity: {\n                    this.stateInNamedEntity(c);\n                    break;\n                }\n                case State.BeforeEntity: {\n                    this.stateBeforeEntity(c);\n                    break;\n                }\n                case State.InHexEntity: {\n                    this.stateInHexEntity(c);\n                    break;\n                }\n                case State.InNumericEntity: {\n                    this.stateInNumericEntity(c);\n                    break;\n                }\n                default: {\n                    // `this._state === State.BeforeNumericEntity`\n                    this.stateBeforeNumericEntity(c);\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InNamedEntity) {\n            this.emitNamedEntity();\n        }\n        // If there is remaining data, emit it in a reasonable way\n        if (this.sectionStart < this.index) {\n            this.handleTrailingData();\n        }\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InNumericEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InHexEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitPartial(start, endIndex) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribdata(start, endIndex);\n        }\n        else {\n            this.cbs.ontext(start, endIndex);\n        }\n    }\n    emitCodePoint(cp) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            this.cbs.ontextentity(cp);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map","import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.foreignContext = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp) {\n        var _a, _b;\n        /*\n         * Entities can be emitted on the character, or directly after.\n         * We use the section start here to get accurate indices.\n         */\n        const index = this.tokenizer.getSectionStart();\n        this.endIndex = index - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = index;\n    }\n    isVoidElement(name) {\n        return !this.options.xmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 &&\n                impliesClose.has(this.stack[this.stack.length - 1])) {\n                const element = this.stack.pop();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.push(name);\n            if (foreignContextElements.has(name)) {\n                this.foreignContext.push(true);\n            }\n            else if (htmlIntegrationElements.has(name)) {\n                this.foreignContext.push(false);\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (foreignContextElements.has(name) ||\n            htmlIntegrationElements.has(name)) {\n            this.foreignContext.pop();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.lastIndexOf(name);\n            if (pos !== -1) {\n                if (this.cbs.onclosetag) {\n                    let count = this.stack.length - pos;\n                    while (count--) {\n                        // We know the stack has sufficient elements.\n                        this.cbs.onclosetag(this.stack.pop(), count !== 0);\n                    }\n                }\n                else\n                    this.stack.length = pos;\n            }\n            else if (!this.options.xmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (!this.options.xmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, \"br\");\n            (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\", {}, true);\n            (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.xmlMode ||\n            this.options.recognizeSelfClosing ||\n            this.foreignContext[this.foreignContext.length - 1]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[this.stack.length - 1] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.pop();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (this.options.xmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true))\n                ;\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map","import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed.\n * @param options Optional options for the parser and DOM builder.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map","/** @file Alternative Entry point for Cheerio, excluding parse5. */\n/**\n * Types used in signatures of Cheerio methods.\n *\n * @category Cheerio\n */\nexport * from './types.js';\nimport { getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport render from 'dom-serializer';\nimport { parseDocument } from 'htmlparser2';\n/**\n * Create a querying function, bound to a document created from the provided markup.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Always `false` here, as we are always using `htmlparser2`.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nexport const load = getLoad(getParse(parseDocument), render);\n//# sourceMappingURL=slim.js.map","import type { AnyNode } from \"cheerio/lib/slim\";\nimport { load } from \"cheerio/lib/slim\";\n\nconst $ = load(\"\");\n\nexport const parseHTML = (content: string): AnyNode[] =>\n  $.parseHTML(content) || [];\n","export const ALLOWED_TAGS: [tag: string, allowedAttrs?: string[]][] = [\n  [\"a\"],\n  [\"abbr\"],\n  [\"address\"],\n  [\"article\"],\n  [\"aside\"],\n  [\"b\"],\n  [\"bdi\"],\n  [\"bdo\", [\"dir\"]],\n  [\"big\"],\n  [\"blockquote\"],\n  [\"br\"],\n  [\"caption\"],\n  [\"center\"],\n  [\"cite\"],\n  [\"code\"],\n  [\"col\", [\"span\", \"width\"]],\n  [\"colgroup\", [\"span\", \"width\"]],\n  [\"dd\"],\n  [\"del\"],\n  [\"div\"],\n  [\"dl\"],\n  [\"dt\"],\n  [\"em\"],\n  [\"fieldset\"],\n  [\"font\"],\n  [\"footer\"],\n  [\"h1\"],\n  [\"h2\"],\n  [\"h3\"],\n  [\"h4\"],\n  [\"h5\"],\n  [\"h6\"],\n  [\"header\"],\n  [\"hr\"],\n  [\"i\"],\n  [\"img\", [\"alt\", \"src\", \"height\", \"width\"]],\n  [\"ins\"],\n  [\"label\"],\n  [\"legend\"],\n  [\"li\"],\n  [\"mark\"],\n  [\"nav\"],\n  [\"ol\", [\"start\", \"type\"]],\n  [\"p\"],\n  [\"pre\"],\n  [\"q\"],\n  [\"rt\"],\n  [\"ruby\"],\n  [\"s\"],\n  [\"section\"],\n  [\"small\"],\n  [\"span\"],\n  [\"strong\"],\n  [\"sub\"],\n  [\"sup\"],\n  [\"table\", [\"width\"]],\n  [\"tbody\"],\n  [\"td\", [\"colspan\", \"height\", \"rowspan\", \"width\"]],\n  [\"tfoot\"],\n  [\"th\", [\"colspan\", \"height\", \"rowspan\", \"width\"]],\n  [\"thead\"],\n  [\"tr\", [\"colspan\", \"height\", \"rowspan\", \"width\"]],\n  [\"tt\"],\n  [\"u\"],\n  [\"ul\"],\n];\n","import type { AnyNode } from \"cheerio/lib/slim\";\n\nimport { parseHTML } from \"./parser.js\";\nimport { ALLOWED_TAGS } from \"../config/allowedTags\";\n\nexport const getText = (content: string | AnyNode[]): string => {\n  const nodes =\n    typeof content === \"string\" ? parseHTML(content) || [] : content;\n\n  return nodes\n    .map((node) => {\n      if (node.type === \"text\") return node.data;\n      if (\"childNodes\" in node) return getText(node.childNodes);\n\n      return \"\";\n    })\n    .join(\"\");\n};\n\nexport interface GetNodeOptions {\n  getLinkText?: (link: string) => Promise<string | null> | string | null;\n  getImageSrc?: (src: string) => Promise<string | null> | string | null;\n  getClass?: (tag: string, className: string) => string | null;\n}\n\nexport interface ElementNode {\n  type: \"node\";\n  name: string;\n  attrs?: Record<string, string>;\n  children?: RichTextNode[];\n}\n\nexport interface TextNode {\n  type: \"text\";\n  text: string;\n}\n\nexport type RichTextNode = ElementNode | TextNode;\n\nconst handleNodes = (node: (RichTextNode | null)[]): RichTextNode[] => {\n  const result = [...node].filter(\n    (item): item is RichTextNode => item !== null\n  );\n\n  if (result.length && result[0].type === \"text\" && result[0].text === \"\\n\")\n    // remove first text node if it's a newline\n    result.shift();\n  if (\n    result.length &&\n    result[result.length - 1].type === \"text\" &&\n    (<TextNode>result[result.length - 1]).text === \"\\n\"\n  )\n    // remove last text node if it's a newline\n    result.pop();\n\n  return result;\n};\n\nconst handleNode = async (\n  node: AnyNode,\n  options: GetNodeOptions\n): Promise<RichTextNode | null> => {\n  if (node.type === \"text\")\n    return { type: \"text\", text: node.data.replace(/\\r/g, \"\") };\n\n  if (node.type === \"tag\") {\n    const config = ALLOWED_TAGS.find(([tag]) => node.name === tag);\n\n    if (config) {\n      const attrs = Object.fromEntries(\n        node.attributes\n          .filter(\n            ({ name }) =>\n              [\"class\", \"style\"].includes(name) || config[1]?.includes(name)\n          )\n          .map<[string, string]>(({ name, value }) => [name, value])\n      );\n      const children = handleNodes(\n        await Promise.all(\n          node.children.map((node) => handleNode(node, options))\n        )\n      );\n\n      if (\n        children.length &&\n        children[0].type === \"text\" &&\n        !children[0].text.trim()\n      )\n        // remove first text node if it's a newline\n        children.shift();\n      if (\n        children.length &&\n        children[children.length - 1].type === \"text\" &&\n        !(<TextNode>children[children.length - 1]).text.trim()\n      )\n        // remove last text node if it's a newline\n        children.pop();\n\n      // add node name to class\n      attrs[\"class\"] = attrs[\"class\"]\n        ? `${attrs[\"class\"]} ${node.name}`\n        : node.name;\n\n      // append link for anchor tag\n      if (node.name === \"a\" && node.attribs.href) {\n        const text = options.getLinkText\n          ? await options.getLinkText(node.attribs.href)\n          : ` (${node.attribs.href})`;\n\n        if (text && text !== getText(node.childNodes))\n          children.push({ type: \"text\", text });\n      }\n\n      // resolve img source for img tag\n      if (node.name === \"img\" && attrs[\"src\"] && options.getImageSrc) {\n        const result = await options.getImageSrc?.(attrs[\"src\"]);\n\n        if (result === null) return null;\n\n        attrs.src = result;\n      }\n\n      // delete styles for table cell\n      if (node.name === \"td\") delete attrs.style;\n\n      if (options.getClass) {\n        const className = options.getClass(node.name, attrs[\"class\"] || \"\");\n\n        if (className === null) delete attrs[\"class\"];\n        else if (Array.isArray(className)) attrs[\"class\"] = className.join(\" \");\n        else attrs[\"class\"] = className;\n      }\n\n      return {\n        type: \"node\",\n        name: node.name,\n        ...(Object.keys(attrs).length ? { attrs } : {}),\n        ...(children.length ? { children } : {}),\n      };\n    }\n  }\n\n  return null;\n};\n\nexport const getRichTextNodes = async (\n  content: string | AnyNode[],\n  options: GetNodeOptions = {}\n): Promise<RichTextNode[]> => {\n  const rootNodes = Array.isArray(content) ? content : parseHTML(content) || [];\n\n  return handleNodes(\n    await Promise.all(rootNodes.map((node) => handleNode(node, options)))\n  );\n};\n"],"names":["defaultOpts","xmlModeDefault","flatten","options","__spreadValues","ElementType","isTag","elem","Root","Text","Directive","Comment","Script","Style","Tag","CDATA","Doctype","Node","parent","prev","next","recursive","cloneNode","DataNode","data","ProcessingInstruction","name","NodeWithChildren","children","_a","Document","Element","attribs","type","_b","node","isTagRaw","isCDATA","isText","isComment","isDirective","isDocument","hasChildren","result","cloneChildren","clone","child","instruction","childs","i","DomHandler","callback","elementCB","parser","error","element","lastNode","text","previousSibling","htmlDecodeTree","c","xmlDecodeTree","decodeMap","fromCodePoint","codePoint","output","replaceCodePoint","CharCodes","TO_LOWER_BIT","BinTrieFlags","isNumber","code","isHexadecimalCharacter","isAsciiAlphaNumeric","isEntityInAttributeInvalidEnd","EntityDecoderState","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","decodeMode","str","offset","start","end","base","digitCount","startIdx","char","lastCp","expectedLength","current","valueLength","determineBranch","consumed","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","jumpOffset","value","lo","hi","mid","midVal","xmlReplacer","xmlCodeMap","getCodePoint","index","encodeXML","lastIdx","match","getEscaper","regex","map","escapeAttribute","escapeText","elementNames","val","attributeNames","unencodedElements","replaceQuotes","formatAttributes","attributes","opts","encode","key","singleTag","render","nodes","renderNode","ElementType.Root","ElementType.Doctype","ElementType.Directive","renderDirective","ElementType.Comment","renderComment","ElementType.CDATA","renderCdata","ElementType.Script","ElementType.Style","ElementType.Tag","renderTag","ElementType.Text","renderText","foreignModeIntegrationPoints","foreignElements","__spreadProps","tag","getOuterHTML","renderHTML","getInnerHTML","getText","textContent","innerText","getChildren","getParent","getSiblings","siblings","getAttributeValue","hasAttrib","getName","nextElementSibling","prevElementSibling","removeElement","childsIndex","replaceElement","replacement","appendChild","sibling","append","currNext","prependChild","prepend","filter","test","recurse","limit","find","nodeStack","indexStack","findOneChild","findOne","existsOne","checked","findAll","Checks","getAttribCheck","attrib","combineFuncs","a","b","compileTest","funcs","testElement","getElements","getElementById","id","getElementsByTagName","tagName","getElementsByTagType","removeSubsets","idx","ancestor","DocumentPosition","compareDocumentPosition","nodeA","nodeB","aParents","bParents","maxIdx","sharedParent","aSibling","bSibling","uniqueSort","arr","relative","getFeed","doc","feedRoot","getOneElement","isValidFeed","getAtomFeed","getRssFeed","feed","item","entry","getMediaElements","addConditionally","href","description","fetch","pubDate","updated","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","media","obj","prop","that","dom","isOptions","html","toRender","defaultOptions","flattenOptions","xml","elements","elems","parseHTML","context","keepScripts","parsed","root","contains","container","contained","merge","arr1","arr2","isArrayLike","newLength","isCheerio","maybeCheerio","camelCase","_","x","cssCase","domEach","array","fn","cloneDom","el","CharacterCodes","isHtml","tagStart","tagChar","hasOwn","rspace","dataAttrPrefix","primitives","rboolean","rbrace","getAttr","xmlMode","setAttr","removeAttribute","attr","objName","objValue","getProp","setProp","property","keys","p","setData","readData","domNames","jsNames","attrName","domName","jsName","e","dataEl","querying","option","values","splitNames","names","removeAttr","attrNames","hasClass","className","clazz","addClass","classNames","numElements","setClass","j","appendClass","removeClass","classes","numClasses","removeAll","elClasses","changed","toggleClass","stateVal","state","elementClasses","SelectorType","AttributeAction","reName","reEscape","actionTypes","unpackPseudos","isTraversal","selector","stripQuotesFromPseudos","funescape","escaped","escapedWhitespace","high","unescapeCSS","isQuote","isWhitespace","parse","subselects","endIndex","parseSelector","selectorIndex","tokens","stripWhitespace","readValueWithParenthesis","counter","isEscaped","pos","slashCount","ensureNotTraversal","addTraversal","addSpecialAttribute","action","finalizeSubselector","loop","firstChar","namespace","possibleAction","ignoreCase","quote","sectionEnd","valueStart","forceIgnore","attributeSelector","quot","boolbase","procedure","token","sortByProcedure","procs","getProcedure","procNew","proc","d","reChars","escapeRegex","caseInsensitiveAttributes","shouldIgnoreCase","attributeRules","adapter","whitespace","ZERO","NINE","formula","sign","readSign","number","readNumber","skipWhitespace","compile","absA","bMod","nthCheck","getChildFunc","filters","itext","rule","equals","func","getNCheck","currentSibling","_rule","dynamicStatePseudo","pseudos","firstChild","elemName","verifyPseudoArgs","subselect","argIndex","aliases","PLACEHOLDER_ELEMENT","ensureIsTag","getNextSiblings","elemIndex","copyOptions","is","compileToken","_context","s","compiled","hasElement","shouldTestNextSiblings","nextElements","compilePseudoSelector","userPseudo","stringPseudo","alias","pseudo","getElementParent","compileGeneralSelector","isFalseCache","previous","lastElement","includesScopePseudo","t","DESCENDANT_TOKEN","FLEXIBLE_DESCENDANT_TOKEN","SCOPE_TOKEN","absolutize","hasContext","sortRules","isArrayContext","finalContext","query","rules","first","second","compileRules","reduceRules","defaultEquals","DomUtils","convertOptionFormats","_c","_d","wrapCompile","_compileToken","prepareContext","appendNextSiblings","elemsLength","nextSiblings","filterNames","isFilter","getLimit","partLimit","num","getDocumentRoot","groupSelectors","selectors","filteredSelectors","plainSelectors","UNIVERSAL_SELECTOR","SCOPE_PSEUDO","some","plain","filtered","sel","filterBySelector","filterByPosition","filterParsed","found","filterElements","filteredSelector","DomUtils.isTag","findFilterElements","select","results","findElements","DomUtils.uniqueSort","queryForSelector","totalLimit","filterIndex","sub","DomUtils.getChildren","remainingSelector","remainingHasTraversal","boolbase.trueFunc","DomUtils.find","els","reSiblingSelector","selectorOrHaystack","haystack","select.select","_getMatcher","matchMap","postFns","matched","filterArray","_matcher","_singleMatcher","_matchUntil","nextElem","matches","innerMatcher","filterSelector","select.is","getFilterFn","_removeDuplicates","parents","parentsUntil","closest","set","selectOpts","selectFn","nextAll","nextUntil","prevAll","prevUntil","contents","newElems","each","select.filter","select.some","not","filterFn","has","last","eq","get","toArray","selectorOrNeedle","$haystack","needle","slice","add","other","selection","addBack","getParse","content","checkIsDocument","update","newChilds","_makeDomArray","_insert","concatenator","domSrc","uniqueSplice","spliceIdx","spliceCount","spliceArgs","oldParent","prevIdx","appendTo","target","prependTo","_wrap","insert","wrapper","lastParent","wrap","wrapperDom","elInsertLocation","updateDOM","wrapInner","unwrap","wrapAll","after","insertAfter","clones","clonedSelf","before","insertBefore","targetArr","remove","replaceWith","cont","empty","toString","staticText","textNode","css","setCss","getCss","styles","stringify","k","newStyles","n","trimmed","submittableSelector","r20","rCRLF","serialize","serializeArray","$elem","Cheerio","Attributes","Traversing","Manipulation","Css","Forms","getLoad","load","internalOpts","initialRoot","LoadedCheerio","cheerio","initialize","r","rootInstance","isNode","instance","search","searchContext","staticMethods","State","isEndOfTagSection","isASCIIAlpha","isHexDigit","QuoteType","Sequences","Tokenizer","decodeEntities","cbs","chunk","isEnd","endOfText","actualIndex","sequence","lower","masked","entityStart","strict","cp","formTags","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","Parser","_e","impliesClose","isImplied","_f","count","isOpenImplied","_g","_h","_j","_k","parseDocument","handler","$","ALLOWED_TAGS","f","u","y","h","m","l","g","handleNodes","handleNode","__async","config","attrs","getRichTextNodes","_0","_1","rootNodes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]}